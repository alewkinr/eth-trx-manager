/*
 * Ethereum transactions manager
 *
 * Ethereum transactions manager
 *
 * API version: 1.0.0
 * Contact: alewkinr@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package http

import (
	"time"
)

// Transaction - Transaction model
type Transaction struct {

	// Transaction hash
	Hash string `json:"hash"`

	// Sender address
	From string `json:"from"`

	// Receiver address
	To string `json:"to"`

	// The value being transacted in Ether
	Value string `json:"value"`

	// Transaction timestamp in RFC3339 format
	Timestamp time.Time `json:"timestamp"`

	// Status of the transactions `IS_PENDING` — transaction is still processing `DONE` — transaction was completed
	Status string `json:"status"`
}

// AssertTransactionRequired checks if the required fields are not zero-ed
func AssertTransactionRequired(obj Transaction) error {
	elements := map[string]interface{}{
		"hash":      obj.Hash,
		"from":      obj.From,
		"to":        obj.To,
		"value":     obj.Value,
		"timestamp": obj.Timestamp,
		"status":    obj.Status,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertTransactionConstraints checks if the values respects the defined constraints
func AssertTransactionConstraints(obj Transaction) error {
	return nil
}
